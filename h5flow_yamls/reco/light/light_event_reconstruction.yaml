# Performs noise subtraction, deconvolution, and peak finding on raw light
# waveforms

flow:
  source: 'light/events'
  stages: [timestamp_corrector, wvfm_filt, wvfm_deconv, wvfm_sum, hit_finder]

  # remove waveforms from output file
  drop: ['light/wvfm', 'light/fwvfm', 'light/deconv']


resources:
  - !include h5flow_yamls/resources/run_data.yaml
  - !include h5flow_yamls/resources/lar_data.yaml


timestamp_corrector:
  classname: LightTimestampCorrector # light/timestamp_corrector.py
  params:
    # output
    t_ns_dset_name: 'light/t_ns'

    # configuration parameters
    slope:
      0: -1.18e-7
      1: 1.18e-7


wvfm_filt:
  classname: WaveformNoiseFilter # light/wvfm_noise_filter.py
  requires:
    - 'light/wvfm'
  params:
    # input
    wvfm_dset_name: 'light/wvfm'

    # output(s)
    fwvfm_dset_name: 'light/fwvfm'
    noise_dset_name: 'light/fwvfm_noise'

    # configuration parameters
    filter_channels: [ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
      16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35,
      36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
      54, 55, 56, 57, 58, 59, 60, 61, 62, 63 ]
    filter_samples: [ 0, 80 ]
    modulo_param: 10 # template length
    keep_noise: False # flag to save extracted noise


wvfm_deconv:
  classname: WaveformDeconvolution # light/wvfm_deconv.py
  requires:
    - 'light/fwvfm'
  params:
    # input
    wvfm_dset_name: 'light/fwvfm'

    # output
    deconv_dset_name: 'light/deconv'

    # configuration parameters
    do_filtering: True
    filter_type: Wiener
    gaus_filter_width: 1
    filter_channels: [ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
      16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35,
      36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
      54, 55, 56, 57, 58, 59, 60, 61, 62, 63 ]
    noise_spectrum_filename: 'h5flow_data/rwf_20210624_094156.fwvfm.noise_power.npz'
    # download link: https://portal.nersc.gov/project/dune/data/Module0-Run2/LRS/LED/rwf_20210624_094156.fwvfm.noise_power.npz
    signal_spectrum_filename: 'h5flow_data/wvfm_deconv_signal_power.npz'
    # download link: https://portal.nersc.gov/project/dune/data/Module0/merged/prod2/light_noise_filtered/wvfm_deconv_signal_power.npz
    signal_impulse_filename: 'h5flow_data/wvfm_deconv_signal_impulse.fit.npz'
    # download link: https://portal.nersc.gov/project/dune/data/Module0/merged/prod2/light_noise_filtered/wvfm_deconv_signal_impulse.fit.npz


wvfm_sum:
  classname: WaveformSum # light/wvfm_sum.py
  requires:
    - 'light/events'
    - 'light/deconv'
  params:
    # input
    wvfm_dset_name: 'light/deconv'

    # output
    swvfm_dset_name: 'light/swvfm'

    # configuration parameters
    detector_channels:
      All:
        # ArcLights have 6 SiPMs each
        - [ 2,  3,  4,  5,  6,  7, ] # det 0
        # LCMs have 2 SiPMs each
        - [ 9, 10,] # det 1
        - [11, 12,] # det 2
        - [13, 14,] # det 3
        - [18, 19, 20, 21, 22, 23, ] # det 4
        - [25, 26,] # det 5
        - [27, 28,] # det 6
        - [29, 30,] # det 7
        - [34, 35, 36, 37, 38, 39, ] # det 8
        - [41, 42,] # det 9
        - [43, 44,] # det 10
        - [45, 46,] # det 11
        - [50, 51, 52, 53, 54, 55, ] # det 12
        - [57, 58,] # det 13
        - [59, 60,] # det 14
        - [61, 62,] # det 15
        - [0,] # trigger signal for timing (necessary for hit finder timing info)


hit_finder:
  classname: WaveformHitFinder # light/hit_finder.py
  requires:
    - 'light/swvfm'
    - 'light/t_ns'
  params:
    # inputs
    wvfm_dset_name: 'light/swvfm'
    t_ns_dset_name: 'light/t_ns'

    # output
    hits_dset_name: 'light/hits' # new dataset to produce

    # configuration parameters
    near_samples: 2
    busy_channel: 16

    # global hit threshold
    threshold: 2000

    # individual detector threshold
    # threshold:
    #   <adc>: { <det #>: <threshold> }

    # skip hit finding on these detectors
    mask: [16,]

