# Performs noise subtraction, deconvolution, and peak finding on raw light waveforms

flow:
  source: 'light/events'
  stages: [timestamp_corrector, wvfm_filt, wvfm_deconv, hit_finder]
  drop: ['light/wvfm', 'light/fwvfm', 'light/deconv'] # remove waveforms from output file

timestamp_corrector:
  classname: LightTimestampCorrector
  params:
    t_ns_dset_name: 'light/t_ns'
    slope:
      0: -1.18e-7
      1: 1.18e-7

wvfm_filt:
  classname: WaveformNoiseFilter
  requires:
    - 'light/wvfm'
  params:
    fwvfm_dset_name: 'light/fwvfm' # new dataset to include
    wvfm_dset_name: 'light/wvfm' # load waveforms from here
    filter_channels: [ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 ] # apply filtering to these channels
    filter_samples: [ 0, 80 ] # use sample 0 -> 80 for template
    modulo_param: 10 # template length
    keep_noise: False # save extracted coherent noise
    noise_dset_name: 'light/fwvfm_noise'

wvfm_deconv:
  classname: WaveformDeconvolution
  requires:
    - 'light/fwvfm'
  params:
    wvfm_dset_name: 'light/fwvfm' # use pedestal+noise subtracted waveforms
    deconv_dset_name: 'light/deconv' # new dataset to produce
    do_filtering: True
    filter_type: Wiener
    gaus_filter_width: 1
    filter_channels: [ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 ] # apply filtering to these channels
    noise_spectrum_filename: 'rwf_20210624_094156.fwvfm.noise_power.npz'
    signal_spectrum_filename: 'wvfm_deconv_signal_power.npz'
    signal_impulse_filename: 'wvfm_deconv_signal_impulse.fit.npz'

hit_finder:
  classname: WaveformHitFinder
  requires:
    - 'light/deconv'
    - 'light/t_ns'
  params:
    wvfm_dset_name: 'light/deconv' # waveform dataset to find hits
    t_ns_dset_name: 'light/t_ns' # timestamps to use for hits
    hits_dset_name: 'light/hits' # new dataset to produce
    near_samples: 2
    busy_channel: 0
    sample_rate: 10. # ns
    # channel_threshold: 2000 # global hit threshold
    channel_threshold: # individual channel threshold (found by taking 2*mean(max(samples 25-50)) on each channel for an example set of deconvolved waveforms)
      0: { 2: 2163, 3: 2317, 4: 2438, 5: 2308, 6: 2088, 7: 1194, 9: 1297, 10: 1299, 11: 1221, 12: 1235, 13: 540, 14: 1288, 18: 1767, 19: 1646, 20: 1661, 21: 1846, 22: 1787, 23: 1788, 25: 1363, 26: 975, 27: 1157, 28: 1123, 29: 1105, 30: 1087, 34: 675, 35: 646, 36: 574, 37: 501, 38: 561, 39: 551, 41: 1308, 42: 1272, 43: 1177, 44: 1134, 45: 1173, 46: 1188, 50: 1811, 51: 1799, 52: 1740, 53: 1838, 54: 1840, 55: 1852, 57: 950, 58: 1000, 59: 971, 60: 971, 61: 1174, 62: 1201 }
      1: { 2: 1770, 3: 1806, 4: 1843, 5: 1790, 6: 1886, 7: 1805, 9: 1104, 10: 1111, 11: 1071, 12: 998, 13: 1084, 14: 1152, 18: 1894, 19: 1919, 20: 1956, 21: 2000, 22: 2012, 23: 1875, 25: 1169, 26: 1094, 27: 1185, 28: 1121, 29: 1061, 30: 1089, 34: 886, 35: 2069, 36: 1827, 37: 1408, 38: 1817, 39: 2230, 41: 1869, 42: 957, 43: 2501, 44: 670, 45: 951, 46: 777, 50: 1751, 51: 1838, 52: 1854, 53: 2975, 54: 1875, 55: 3027, 57: 1230, 58: 1204, 59: 1070, 60: 1081, 61: 1201, 62: 3575 }
    channel_mask: [0, 1, 8, 15, 16, 17, 24, 31, 32, 33, 40, 47, 48, 49, 56, 63] # don't make hits on these channels

