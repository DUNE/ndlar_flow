# Performs noise subtraction, deconvolution, and peak finding on raw light waveforms

flow:
  source: 'light/events'
  stages: [timestamp_corrector, wvfm_filt, wvfm_deconv, hit_finder]
  drop: ['light/wvfm', 'light/fwvfm', 'light/deconv'] # remove waveforms from output file

timestamp_corrector:
  classname: LightTimestampCorrector
  params:
    t_ns_dset_name: 'light/t_ns'
    slope:
      0: -1.18e-7
      1: 1.18e-7

wvfm_noise_filter:
  classname: WaveformNoiseFilter
  requires:
    - 'light/wvfm'
  params:
    fwvfm_dset_name: 'light/fwvfm' # new dataset to include
    wvfm_dset_name: 'light/wvfm' # load waveforms from here
    filter_channels: [ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 ] # apply filtering to these channels
    filter_samples: [ 0, 80 ] # use sample 0 -> 80 for template
    modulo_param: 10 # template length
    keep_noise: False # save extracted coherent noise
    noise_dset_name: 'light/fwvfm_noise'

wvfm_deconv:
  classname: WaveformDeconvolution
  requires:
    - 'light/fwvfm'
  params:
    wvfm_dset_name: 'light/fwvfm' # use pedestal+noise subtracted waveforms
    deconv_dset_name: 'light/deconv' # new dataset to produce
    do_filtering: True
    filter_type: Wiener
    filter_channels: [ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 ] # apply filtering to these channels
    noise_spectrum_filename: 'rwf_20210624_094156.fwvfm.noise_power.npz'
    signal_spectrum_filename: 'wvfm_deconv_signal_power.npz'
    signal_impulse_filename: 'wvfm_deconv_signal_impulse.fit.npz'

hit_finder:
  classname: WaveformHitFinder
  requires:
    - 'light/deconv'
    - 'light/t_ns'
  params:
    wvfm_dset_name: 'light/deconv' # waveform dataset to find hits
    t_ns_dset_name: 'light/t_ns' # timestamps to use for hits
    hits_dset_name: 'light/hits' # new dataset to produce
    near_samples: 3
    busy_channel: 0
    sample_rate: 10. # ns
    channel_threshold: 500 # global hit threshold
    channel_mask: [0, 1, 8, 15, 16, 17, 24, 31, 32, 33, 40, 47, 48, 49, 56, 63] # don't make hits on these channels

